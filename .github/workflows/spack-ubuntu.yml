name: spack-ubuntu

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  init:
    name: ${{ matrix.config }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac.
    runs-on: ubuntu-latest
    container:
      image: lihpccg/mgx-ubuntu.20.04-spack.0.19.0:latest
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # seems to be needed by codecov
          submodules: recursive

      - name: Initialize the dev environment
        shell: bash
        run : |
          source /spack/share/spack/setup-env.sh
          git clone --depth=1 https://github.com/LIHPC-Computational-Geometry/spack_recipes_meshing.git
          spack repo add ./spack_recipes_meshing/meshing_repo
          spack repo add ./spack_recipes_meshing/supersede_repo

      - name: Build and install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh 
          spack env activate meshing-env
          spack add lima
          # we use GITHUB_WORKSPACE instead of github.Workspace because in containers it
          # seems to be incorrect (see https://github.com/actions/runner/issues/2058)
          spack develop -p $GITHUB_WORKSPACE --no-clone lima@7.7.9
          spack install --no-checksum
          # now we build using cmake with spack provided build variables
          spack load --only dependencies --sh lima > spack_env_file.sh
          source spack_env_file.sh
          cmake -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_Fortran_COMPILER=/usr/bin/gfortran-9 -DCMAKE_CXX_FLAGS="-std=c++11" -DCMAKE_Fortran_FLAGS="-fdefault-integer-8 -fdefault-real-8 -fdefault-double-8" \
          -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_XLMLIMA=ON -DBUILD_TESTS:BOOL=ON -DBUILD_SCRIPTING:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DINT_8:BOOL=ON -DREAL_8:BOOL=ON \
          -DPython3_ROOT_DIR=/usr/lib/python3 \
          -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}} .
          make -j
          #make test

      - name: Test c++ lib install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          spack env activate meshing-env
          spack load lima
          cd test_link/
          cmake -S . -B build_exe
          cmake --build build_exe
          cd build_exe
          ctest
